# Generated by Selenium IDE
import pytest
import unittest
import time
import json
import pandas as pd
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestCreateNewEmployeetest():
    def setup_method(self, ):
        self.driver = webdriver.Chrome()
        self.vars = {}
        self.create_employee_data = pd.read_csv('./TestScenarioData/CreateEmployeeTestCaseData.csv')
        self.update_employee_data = pd.read_csv('./TestScenarioData/updateEmployeeTestCaseData.csv')

    def dataframe(self):
        print(self.create_employee_data.head())

    def teardown_method(self):
        self.driver.quit()

    def test_createNewEmployeetest(self):
        self.setup_method()
        self.driver.get("http://localhost:8080/")
        for index, value in self.create_employee_data.iterrows():
            self.driver.set_window_size(1104, 809)
            self.driver.find_element(By.LINK_TEXT, "Add Employee").click()
            self.driver.find_element(By.ID, "name").click()
            self.driver.find_element(By.ID, "name").send_keys(value[0])
            self.driver.find_element(By.ID, "email").send_keys(value[1])
            self.driver.find_element(By.ID, "age").send_keys(value[2])
            self.driver.find_element(By.ID, "designation").click()
            self.driver.find_element(By.ID, "designation").send_keys(value[3])
            self.driver.find_element(By.CSS_SELECTOR, ".btn-info").click()
            self.driver.refresh()
            time.sleep(5)
        self.teardown_method()

    def test_updateEmployeeTest(self):
        self.setup_method()
        for index, value in self.update_employee_data.iterrows():
            self.driver.get("http://localhost:8080/")
            self.driver.set_window_size(1106, 810)
            self.driver.find_element(By.CSS_SELECTOR, f"tr:nth-child(1) .btn-primary").click()
            self.driver.find_element(By.ID, "name").clear()
            self.driver.find_element(By.ID, "name").send_keys(value[0])
            self.driver.find_element(By.ID, "email").clear()
            self.driver.find_element(By.ID, "email").send_keys(value[1])
            self.driver.find_element(By.ID, "age").clear()
            self.driver.find_element(By.ID, "age").send_keys(value[2])
            self.driver.find_element(By.ID, "designation").clear()
            self.driver.find_element(By.ID, "designation").send_keys(value[3])
            self.driver.find_element(By.CSS_SELECTOR, ".btn-info").click()
            self.driver.refresh()
            time.sleep(5)
        self.teardown_method()

    def test_deleteEmployee(self):
        self.setup_method()
        for index, value in self.update_employee_data.iterrows():
            self.driver.get("http://localhost:8080/")
            self.driver.set_window_size(1106, 810)
            self.driver.find_element(By.CSS_SELECTOR, f"tr:nth-child(1) .btn-danger").click()
            self.driver.refresh()
        time.sleep(5)
        self.teardown_method()

    def test_checkAddEmployeeButtonFunctionality(self):
        self.driver.get("http://localhost:8080/")
        self.driver.set_window_size(1104, 809)
        self.driver.find_element(By.LINK_TEXT, "Add Employee").click()
        self.driver.find_element(By.LINK_TEXT, "Back to Employee List").click()
